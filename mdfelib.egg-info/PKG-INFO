Metadata-Version: 1.1
Name: mdfelib
Version: 0.1
Summary: mdfelib: Manifesto Eletrônico de Documentos Fiscais - MDF-e
Home-page: https://github.com/akretion/mdfelib
Author: Raphael Valyi
Author-email: raphael.valyi@akretion.com
License: MIT
Description: mdfelib Python library
        =====================
        
        A mdfelib é uma biblioteca para ler e gerir Manifesto Eletrônico de Documentos Fiscais brasileiros (MDF-e). Ja existem varias outras bibliotecas, porem na Akretion queriamos algo que fosse simples de manter para usar com o ERP open source Odoo. A mdfeelib nao tem a pretençao de solucionar toda burocracia do SPED sozinha, mas apenas a questao da geraçao dos documentos de MDF-e. Tambem criamos outras bibliotecas semelhantes para os outros documentos electronicos do SPED.
        
        A mdfelib permite de:
        
        * Gerir os XMLs dos documentos fiscais.
        * Validar os dados com as mesmas validaçoes dos XSDs ao montar os objetos, o que evita detetar os erros apenas ao transmitir o XML.
        * Importar XMLs e transfoma-los em objetos Python. Usando um sistema de sub-classes, fica facil mapear esses objetos em outros objetos ou adicionar qualquer metodo customizado.
        
        A mdfelib é:
        
        * **Simples e confiavel**. O codigo é gerido pelo generateDS a partir dos XSD's da Fazenda usando o script generate de menos de **70 linhas de codigo** apenas.
        * Compativel com **Python 2 e Python 3**.
        * Capaz de carregar **varias versoes dos esquemas**. Isso pode ser bem util ao receber um documento com um layout antigo.
        As tecnologias XML (XSD, WSDL, SOAP...) usadas pelo site da Fazenda foram criadas inicialmente para Java e .Net. Durante um bom tempo essas tecnologias ficaram para tras no mundo do Python. Por isso varias pessoas foram criar bibliotecas manualmente com milhares de linhas e poucos testes para montar os XMLs dos documentos electronicos. Mas hoje é um absurdo usar biblitecas escritas manualmente e depender do autor inicial a cada atualizaçao dos esquemas ou quando seu programa deve migrar para Python 3. Veja o conceito do 'Truck Factor' <https://en.wikipedia.org/wiki/Bus_factor>
        
        É debativel qual é a melhor forma de transmitir esses documentos electronicos para o site da Fazenda (talvez com essas bibliotecas que ja existem, talvez com outras bibilotecas em Java especializadas em transmitir os documentos electronicos). Porem na questao de montar os XML e poder efetuar validaçoes dos dados o mais cedo possivel (perto do momento em qual o usuario preenchou os dados), dificilmente uma biblioteca de milhares de linhas escrita manualmente fica mais confiavel do que codigo gerido a partir dos XSD da Fazenda apenas. As classes da mdfelib sao geridas usando a ferramenta generateDS. A funcionalidade de sub-classes do generateDS tambem ajuda na questao dos mapeamentos entre o modelo de dados dos esquemas da fazenda e o modelo de dados do seu software (ERP por examplo). Finalmente ficou possivel fazer com Python o que o pessoal do Java ja fazia ha muito tempo com as tecnologias do tipo JAXB.
        
        Voce pode aprender mais sobre o generateDS.py aqui: <http://www.davekuhlman.org/generateDS.html>
        
        como instalar
        =============
        
        .. code::
        
          pip install -e git+https://github.com/akretion/mdfelib.git#egg=mdfelib
        
        como usar
        =========
        
        .. code:: python
        
            import sys
            from mdfelib.v3_00 import mdfe as mdfe3
            from mdfelib.v3_00 import mdfeModalRodoviario as rodo3
        
            ender_emit = mdfe3.TEndeEmi(
                xLgr='Rua',
                nro='150',
                xBairro='Centro',
                cMun='2305506',
                xMun='IGUATU',
                CEP='63500000',
                UF='CE',
                fone='08002755700'
            )
        
            emit = mdfe3.emitType(
                CNPJ='4142966000334',
                IE='069444013',
                xNome='Razao Social',
                xFant='Fantasia',
                enderEmit=ender_emit)
        
            carregamento_1 = mdfe3.infMunCarregaType(
                cMunCarrega='2305506',
                xMunCarrega='TESTE'
            )
        
            ide = mdfe3.ideType(
                cUF='23',
                tpAmb=2,
                tpEmit=1,
                tpTransp=None,
                mod=1,
                serie='1',
                nMDF='1',
                cMDF='00004894',
                cDV='4',
                modal=1,
                dhEmi='2017-10-02T18:05:55-03:00',
                tpEmis=1,
                procEmi='0',
                verProc='Odoo',
                UFIni='CE',
                UFFim='CE',
                infMunCarrega=[carregamento_1],
                infPercurso=None,
                dhIniViagem=None,
                indCanalVerde=None,
            )
        
            tot = mdfe3.totType(
                qCTe=None,
                qNFe='2',
                qMDFe=None,
                vCarga='3044.00',
                cUnid='01',
                qCarga='57.0000',
            )
        
            lista_cte = []
            lista_nfe = []
        
        
            nfe_1 = mdfe3.infNFeType(
                chNFe='23180341426966004836558720000002681197872700',
                SegCodBarra=None,
                indReentrega=None,
                infUnidTransp=None,
                peri=None,
            )
        
            nfe_2 = mdfe3.infNFeType(
                chNFe='23180341426966003600558720000012321410321707',
                SegCodBarra=None,
                indReentrega=None,
                infUnidTransp=None,
                peri=None,
            )
        
            lista_nfe.append(nfe_1)
            lista_nfe.append(nfe_2)
        
            infMunDescarga= mdfe3.infMunDescargaType(
                cMunDescarga='2305506',
                xMunDescarga='Cidade',
                infCTe=lista_cte,
                infNFe=lista_nfe,
                infMDFeTransp=None,
            )
        
            infDoc= mdfe3.infDocType(infMunDescarga=[infMunDescarga])
        
            condutor_1 = rodo3.condutorType(
                xNome='Luis Felipe Mileo',
                CPF='33333333333'
            )
        
            veiculo = rodo3.veicTracaoType(
                cInt='0001',
                placa='PMR3000',
                RENAVAM=None,
                tara='4250',
                capKG='0',
                capM3='0',
                prop=None,
                condutor=[condutor_1],
                tpRod='02',
                tpCar='02',
                UF='CE'
            )
        
            rodo = rodo3.rodo(
                infANTT=None,
                veicTracao=veiculo,
                veicReboque=None,
                codAgPorto=None,
                lacRodo=None
            )
        
            modal = mdfe3.infModalType(versaoModal="3.00", anytypeobjs_=rodo)
        
            mdfe = mdfe3.infMDFeType(
                versao="3.00", Id=None, ide=ide, emit=emit, infModal=modal,
                infDoc=infDoc, seg=None, tot=tot, lacres=None, autXML=None,
                infAdic=None
            )
        
            mdfe.export(sys.stdout, 0)
        
            <infMDFeType versao="3.00">
            <ide>
                <cUF>23</cUF>
                <tpAmb>2</tpAmb>
                <tpEmit>1</tpEmit>
                <mod>1</mod>
                <serie>1</serie>
                <nMDF>1</nMDF>
                <cMDF>00004894</cMDF>
                <cDV>4</cDV>
                <modal>1</modal>
                <dhEmi>2017-10-02T18:05:55-03:00</dhEmi>
                <tpEmis>1</tpEmis>
                <procEmi>0</procEmi>
                <verProc>Odoo</verProc>
                <UFIni>CE</UFIni>
                <UFFim>CE</UFFim>
                <infMunCarrega>
                    <cMunCarrega>2305506</cMunCarrega>
                    <xMunCarrega>TESTE</xMunCarrega>
                </infMunCarrega>
            </ide>
            <emit>
                <CNPJ>4142966000334</CNPJ>
                <IE>069444013</IE>
                <xNome>Razao Social</xNome>
                <xFant>Fantasia</xFant>
                <enderEmit>
                    <xLgr>Rua</xLgr>
                    <nro>150</nro>
                    <xBairro>Centro</xBairro>
                    <cMun>2305506</cMun>
                    <xMun>IGUATU</xMun>
                    <CEP>63500000</CEP>
                    <UF>CE</UF>
                    <fone>08002755700</fone>
                </enderEmit>
            </emit>
            <infModal versaoModal="3.00">
                <rodo>
                    <veicTracao>
                        <cInt>0001</cInt>
                        <placa>PMR3000</placa>
                        <tara>4250</tara>
                        <capKG>0</capKG>
                        <capM3>0</capM3>
                        <condutor>
                            <xNome>Luis Felipe Mileo</xNome>
                            <CPF>33333333333</CPF>
                        </condutor>
                        <tpRod>02</tpRod>
                        <tpCar>02</tpCar>
                        <UF>CE</UF>
                    </veicTracao>
                </rodo>
            </infModal>
            <infDoc>
                <infMunDescarga>
                    <cMunDescarga>2305506</cMunDescarga>
                    <xMunDescarga>Cidade</xMunDescarga>
                    <infNFe>
                        <chNFe>23180341426966004836558720000002681197872700</chNFe>
                    </infNFe>
                    <infNFe>
                        <chNFe>23180341426966003600558720000012321410321707</chNFe>
                    </infNFe>
                </infMunDescarga>
            </infDoc>
            <tot>
                <qNFe>2</qNFe>
                <vCarga>3044.00</vCarga>
                <cUnid>01</cUnid>
                <qCarga>57.0000</qCarga>
            </tot>
            </infMDFeType>
        
Keywords: MDF-e ERP Odoo
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 2.7
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
